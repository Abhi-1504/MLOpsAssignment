name: Continuous Training

on:
  push:
    branches: [ main ]
    paths:
      - 'data/raw/housing.csv.dvc'

env:
  MLFLOW_TRACKING_URI: http://127.0.0.1:5000

jobs:
  continuous-training:
    runs-on: self-hosted
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Install dependencies and pull raw data only
      run: |
        source /home/ubuntu/mlops/bin/activate
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        # Only pull raw data that exists in remote
        dvc pull data/raw/housing.csv -r myremote

    - name: Clean previous pipeline outputs
      run: |
        source /home/ubuntu/mlops/bin/activate
        # Clean any previous pipeline outputs to force fresh run
        rm -rf data/processed models metrics.json || true

    - name: Run DVC pipeline
      run: |
        source /home/ubuntu/mlops/bin/activate
        export MLFLOW_TRACKING_URI=${{ env.MLFLOW_TRACKING_URI }}
        dvc repro --force

    - name: Push new pipeline outputs to remote
      run: |
        source /home/ubuntu/mlops/bin/activate
        # Push the newly generated outputs back to remote
        dvc push -r myremote

    - name: Build and restart API service
      run: |
        cd /home/ubuntu/MLOpsAssignment
        
        # Set environment variable for docker-compose
        export DOCKERHUB_USERNAME="${{ secrets.DOCKERHUB_USERNAME }}"
        
        # Stop existing service
        docker-compose stop housing-api || true
        
        # Remove old container to avoid conflicts
        docker-compose rm -f housing-api || true
        
        # Build the image locally first (as fallback)
        docker-compose build housing-api
        
        # Try to pull latest image if it exists, otherwise use local build
        docker-compose pull housing-api || echo "Could not pull image, using local build"
        
        # Start the service
        docker-compose up -d housing-api
        
        # Wait for service to be ready
        sleep 10
        docker-compose ps housing-api
        
    - name: Verify deployment
      run: |
        timeout 30 bash -c 'until curl -f http://localhost:8000/health 2>/dev/null; do sleep 2; done' || echo "Service health check timeout"
        echo "Deployment completed"